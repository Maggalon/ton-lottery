;;
;; Header files for TONLottery
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_prepare_random
() __tact_prepare_random() impure inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $BuyTickets$_load
(slice, ((int))) $BuyTickets$_load(slice sc_0) inline;

;; $InternalSendAmount$_load
(slice, ((slice, int))) $InternalSendAmount$_load(slice sc_0) inline;

;; $InternalAddAmount$_store
builder $InternalAddAmount$_store(builder build_0, (int) v) inline;

;; $InternalAddAmount$_store_cell
cell $InternalAddAmount$_store_cell((int) v) inline;

;; $InternalSetHolder$_store
builder $InternalSetHolder$_store(builder build_0, (slice) v) inline;

;; $InternalSetHolder$_store_cell
cell $InternalSetHolder$_store_cell((slice) v) inline;

;; $TONLottery$_store
builder $TONLottery$_store(builder build_0, (slice, int, int, int, int) v) inline;

;; $TONLottery$_load
(slice, ((slice, int, int, int, int))) $TONLottery$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $Holder$init$_store
builder $Holder$init$_store(builder build_0, (slice, slice) v) inline;

;; $Ticket$init$_store
builder $Ticket$init$_store(builder build_0, (int, slice) v) inline;

;; $TONLottery$_contract_init
(slice, int, int, int, int) $TONLottery$_contract_init() impure inline_ref;

;; $TONLottery$_contract_load
(slice, int, int, int, int) $TONLottery$_contract_load() impure inline_ref;

;; $TONLottery$_contract_store
() $TONLottery$_contract_store((slice, int, int, int, int) v) impure inline;

;; $global_random
int $global_random(int $min, int $max) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
int $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Holder$_init_child
(cell, cell) $Holder$_init_child(cell sys', slice $addr, slice $parent) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $Ticket$_init_child
(cell, cell) $Ticket$_init_child(cell sys', int $seqno, slice $parent) inline_ref;

;; $TONLottery$_fun_getLotteryLiveTime
((slice, int, int, int, int), int) $TONLottery$_fun_getLotteryLiveTime((slice, int, int, int, int) $self) impure inline_ref;

;; $TONLottery$_fun_lotteryLiveTime
((slice, int, int, int, int), int) $TONLottery$_fun_lotteryLiveTime((slice, int, int, int, int) $self) impure inline_ref;

;; $TONLottery$_fun_forward
((slice, int, int, int, int), ()) $TONLottery$_fun_forward((slice, int, int, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $TONLottery$_fun_notify
((slice, int, int, int, int), ()) $TONLottery$_fun_notify((slice, int, int, int, int) $self, cell $body) impure inline;

;; $TONLottery$_fun_requireOwner
((slice, int, int, int, int), ()) $TONLottery$_fun_requireOwner((slice, int, int, int, int) $self) impure inline_ref;

;; $TONLottery$_fun_owner
((slice, int, int, int, int), slice) $TONLottery$_fun_owner((slice, int, int, int, int) $self) impure inline_ref;

;; $SendParameters$_constructor_to_body_value_mode_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_body_value_mode_code_data(slice $to, cell $body, int $value, int $mode, cell $code, cell $data) inline;

;; $InternalAddAmount$_constructor_amount
((int)) $InternalAddAmount$_constructor_amount(int $amount) inline;

;; $InternalSetHolder$_constructor_holder
((slice)) $InternalSetHolder$_constructor_holder(slice $holder) inline;

;; $SendParameters$_constructor_to_body_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_body_value_mode(slice $to, cell $body, int $value, int $mode) inline;

;; $SendParameters$_constructor_to_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode(slice $to, int $value, int $mode) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
